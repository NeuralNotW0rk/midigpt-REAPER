desc:midigpt Track-Specific Generation Options

slider1:jsfx_id=349583025<349583025, 349583025, 1>-jsfx_id

// Track-specific midigpt parameters (per-track overrides)
slider10:track_temperature=-1<-1, 2.0, 0.1{-1 = Use Global,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0}>Track Temperature
slider11:track_density=10<0, 20, 1>Track Density
slider12:track_type=10<0, 20, 1>Track Type

// Polyphony controls
slider20:min_polyphony=0<0, 6, 1{Any,1,2,3,4,5,6}>Minimum Polyphony
slider21:max_polyphony=0<0, 6, 1{Any,1,2,3,4,5,6}>Maximum Polyphony
slider22:polyphony_hard_limit=9<1, 16, 1>Polyphony Hard Limit (Track)

// Generation behavior
slider30:autoregressive=0<0, 1, 1{No,Yes}>Autoregressive Generation
slider31:track_ignore=0<0, 1, 1{No,Yes}>Ignore Track

// Instrument selection
slider40:instrument=0<0, 127, 1>MIDI Instrument (0-127)
slider41:use_piano_default=1<0, 1, 1{No,Yes}>Use Acoustic Grand Piano as Default

// Advanced controls
slider50:selected_bars_mode=1<0, 2, 1{All Bars,Selected Items Only,Custom Pattern}>Selected Bars Mode

in_pin:none
out_pin:none

@init
// Initialize instrument mapping
instrument_names_available = 1; // Flag to show we have basic instrument support

// Store previous values
track_temp_prev = track_temperature;
density_prev = track_density;
type_prev = track_type;
min_poly_prev = min_polyphony;
max_poly_prev = max_polyphony;

@slider
// Handle instrument selection
use_piano_default && instrument == 0 ? (
  // acoustic_grand_piano is typically instrument 0, so this is fine
);

// Ensure polyphony constraints make sense
min_polyphony > max_polyphony && max_polyphony > 0 ? (
  max_polyphony = min_polyphony;
);

// Track temperature validation
track_temperature == -1 ? (
  // Will use global temperature
) : track_temperature <= 0 ? (
  track_temperature = 0.1;
);

// Store current values for change detection
track_temp_prev = track_temperature;
density_prev = track_density;
type_prev = track_type;
min_poly_prev = min_polyphony;
max_poly_prev = max_polyphony;
